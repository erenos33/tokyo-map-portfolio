// プラグイン設定
plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.5'
	id 'io.spring.dependency-management' version '1.1.7'
}

// グループとバージョンの設定
group = 'me.tokyomap'
version = '0.0.1-SNAPSHOT'

// Javaバージョン指定
java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

// 依存リポジトリ
repositories {
	mavenCentral()
}

// 依存関係の定義
dependencies {
	// Spring Boot関連
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'


	// JWTライブラリ
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// データベースドライバ
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j'

	// Lombok設定（本番 + テスト両方）
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	// Spring Bootテスト関連
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// QueryDSL設定
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api'

	// Swagger (OpenAPI)
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

}

// テスト設定
tasks.named('test') {
	useJUnitPlatform()
}

// QueryDSL Qクラス生成タスク
tasks.register("compileQuerydsl", JavaCompile) {
	group = "build"
	description = "Compile Querydsl Q-type classes"
	source = sourceSets.main.java
	classpath = sourceSets.main.compileClasspath
	destinationDirectory.set(file("$buildDir/generated/querydsl"))
	options.annotationProcessorPath = configurations.annotationProcessor
}

